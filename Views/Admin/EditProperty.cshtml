@model ManagementWebApp.Models.PropertyModels

@{
    ViewBag.Title = "EditProperty";
    Layout = "~/Views/Shared/_LayoutAdminDashboard.cshtml";
}

<style>
 label{
     font-size:15px;
 }
    input[type="text"], input[type="number"] {
        width: 100%;
    }
 
    .editordiv{
        display:flex;
        width:100%;
        flex-direction:row;
        flex-wrap:wrap;

    }
    .editorinner{
        width:50%;
    }
</style>

@using (@Html.BeginForm("SetProperty","Admin",FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h2>Edit Property Details</h2>

    <div class="editordiv">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="editorinner">
            @Html.LabelFor(model => model.PropertyName, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.PropertyName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PropertyName, "", new { @class = "text-danger" })
        </div>

        <div class="editorinner">
            @Html.LabelFor(model => model.PropertyLocation, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.PropertyLocation, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PropertyLocation, "", new { @class = "text-danger" })
        </div>



        <div class="editorinner">
            @Html.LabelFor(model => model.PropertyAddress, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.PropertyAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PropertyAddress, "", new { @class = "text-danger" })

        </div>

        <div class="editorinner">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>


        <div class="editorinner">
            @Html.LabelFor(model => model.NoOfSeats, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.NoOfSeats, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NoOfSeats, "", new { @class = "text-danger" })
        </div>


        <div class="editorinner">
            @Html.LabelFor(model => model.Time, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })

        </div>
        <div class="editorinner">
            @Html.LabelFor(model => model.CurrentEvent_Id, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.EditorFor(model => model.CurrentEvent_Id, new { htmlAttributes = new { @class = "form-control" } })
        </div>


    </div>

    <button type="submit" class="btn-sm ">Submit</button>
</div>
    }


